//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "MMViewController.h"

#import "AccountServiceExt.h"
#import "IBetaMgrExt.h"
#import "IContactMgrExt.h"
#import "IMessageExt.h"
#import "MMHandoffServiceExt.h"
#import "MMNetExt.h"
#import "MMTabbarControllerDelegate.h"
#import "NSSplitViewDelegate.h"
#import "NSWindowDelegate.h"
#import "SyncExt.h"

@class LeftViewController, MMAvatarImageView, MMBadgeOverlayView, MMChatsViewController, MMContactsViewController, MMFavoritesViewController, MMHandoffButton, MMHandoffViewController, MMLockViewController, MMSettingMenuWindowController, MMSplitView, MMView, MMYoMessageView, NSButton, NSString;

@interface MMMainViewController : MMViewController <NSSplitViewDelegate, MMTabbarControllerDelegate, IMessageExt, MMNetExt, AccountServiceExt, SyncExt, IContactMgrExt, IBetaMgrExt, NSWindowDelegate, MMHandoffServiceExt>
{
    BOOL _shouldResponseToTabClick;
    BOOL _isChaningTrafficLightButtons;
    MMView *_tabbarContainer;
    MMAvatarImageView *_profileImageView;
    LeftViewController *_leftViewController;
    MMChatsViewController *_chatsViewController;
    MMContactsViewController *_contactsViewcController;
    MMFavoritesViewController *_favoritesViewController;
    NSButton *_preferencesButton;
    MMSettingMenuWindowController *_settingMenuWindowController;
    MMHandoffButton *_handoffButton;
    MMHandoffViewController *_handoffViewController;
    MMSplitView *_splitView;
    MMViewController *_rightViewController;
    MMBadgeOverlayView *_badgeView;
    NSButton *_composeButton;
    MMYoMessageView *_yoMessageView;
    MMLockViewController *_lockViewController;
    double _titlebarPosY;
}

@property(nonatomic) double titlebarPosY; // @synthesize titlebarPosY=_titlebarPosY;
@property(nonatomic) BOOL isChaningTrafficLightButtons; // @synthesize isChaningTrafficLightButtons=_isChaningTrafficLightButtons;
@property(retain, nonatomic) MMLockViewController *lockViewController; // @synthesize lockViewController=_lockViewController;
@property(nonatomic) BOOL shouldResponseToTabClick; // @synthesize shouldResponseToTabClick=_shouldResponseToTabClick;
@property(retain, nonatomic) MMYoMessageView *yoMessageView; // @synthesize yoMessageView=_yoMessageView;
@property(nonatomic) __weak NSButton *composeButton; // @synthesize composeButton=_composeButton;
@property(retain, nonatomic) MMBadgeOverlayView *badgeView; // @synthesize badgeView=_badgeView;
@property(nonatomic) __weak MMViewController *rightViewController; // @synthesize rightViewController=_rightViewController;
@property(nonatomic) __weak MMSplitView *splitView; // @synthesize splitView=_splitView;
@property(retain, nonatomic) MMHandoffViewController *handoffViewController; // @synthesize handoffViewController=_handoffViewController;
@property(nonatomic) __weak MMHandoffButton *handoffButton; // @synthesize handoffButton=_handoffButton;
@property(retain, nonatomic) MMSettingMenuWindowController *settingMenuWindowController; // @synthesize settingMenuWindowController=_settingMenuWindowController;
@property(nonatomic) __weak NSButton *preferencesButton; // @synthesize preferencesButton=_preferencesButton;
@property(retain, nonatomic) MMFavoritesViewController *favoritesViewController; // @synthesize favoritesViewController=_favoritesViewController;
@property(retain, nonatomic) MMContactsViewController *contactsViewcController; // @synthesize contactsViewcController=_contactsViewcController;
@property(retain, nonatomic) MMChatsViewController *chatsViewController; // @synthesize chatsViewController=_chatsViewController;
@property(nonatomic) __weak LeftViewController *leftViewController; // @synthesize leftViewController=_leftViewController;
@property(nonatomic) __weak MMAvatarImageView *profileImageView; // @synthesize profileImageView=_profileImageView;
@property(nonatomic) __weak MMView *tabbarContainer; // @synthesize tabbarContainer=_tabbarContainer;
- (void).cxx_destruct;
- (void)onModifyUserImageWithUrl:(id)arg1 userName:(id)arg2;
- (void)onUserLogout;
- (void)onGetOnlineInfoFinished;
- (void)onCurrentDeviceLockStateChanged:(BOOL)arg1;
- (void)onNetStatusChange:(int)arg1;
- (void)onAddYoMsgWithChatName:(id)arg1 msgData:(id)arg2;
- (void)addButtonPressed:(id)arg1;
- (void)onClearUnreadBetaPackage;
- (void)onRecvBetaPackage:(id)arg1;
- (void)onClearUnreadBetaInvitation;
- (void)onRecvBetaInvitation:(id)arg1;
- (void)onBetaDataLoad;
- (void)onReceiveNewHandoff:(id)arg1;
- (void)onClearHandoffUnread;
- (void)onUpdateHandoffExpt:(BOOL)arg1;
- (void)showPreferencesRedDotIfNeed;
- (void)showHandoffView:(id)arg1;
- (void)showPreferencesWindow:(id)arg1;
- (void)chatDelete:(id)arg1;
- (void)chatMuteOrUnmute:(id)arg1;
- (void)chatStickyOrUnsticky:(id)arg1;
- (void)newDocument:(id)arg1;
- (void)tabbarController:(id)arg1 willSelectViewControllerAtIndex:(unsigned long long)arg2;
- (void)tabbarController:(id)arg1 didSelectViewController:(id)arg2;
- (void)resumeUserLocalViewSize:(id)arg1;
- (void)splitViewDidResizeSubviews:(id)arg1;
- (void)splitView:(id)arg1 resizeSubviewsWithOldSize:(struct CGSize)arg2;
- (BOOL)splitView:(id)arg1 shouldAdjustSizeOfSubview:(id)arg2;
- (double)splitView:(id)arg1 constrainMaxCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(id)arg1 constrainMinCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (id)tabButtonAtIndex:(int)arg1;
- (void)setDetailViewWithController:(id)arg1;
- (void)setupTabbarController;
- (void)cleanTabbarController;
- (void)onSessionRecoverEnd:(id)arg1;
- (void)onSessionRecoverBegin:(id)arg1;
- (void)onRecvWCDBFinishToRestart:(id)arg1;
- (void)onRecvWCDBFailedToRepair:(id)arg1;
- (void)onRecvWCDBStartToRepair:(id)arg1;
- (void)hideLockScreen;
- (void)showLockScreenWithPlaySound:(BOOL)arg1;
- (void)updateWindowTitle;
- (void)setupProfileImageView;
- (void)awakeFromNib;
- (void)dealloc;
- (void)checkShouldShowWhatsNew;
- (void)viewDidAppear;
- (void)viewWillAppear;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

